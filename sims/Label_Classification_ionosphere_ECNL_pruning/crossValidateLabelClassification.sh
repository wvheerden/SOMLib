# ===================================================================================================
# Script        : crossValidateLabelClassification.sh
# Usage         : ./crossValidateLabelClassification.sh [simDirectory]
# Purpose       : Performs a cross-validated paired test on parameter data set using a neuron
#                 labeling scheme
#
# Preconditions : - All required simulation-related programs are present
#                 - Data set as directory name in dataset directory must exist and be in correct form
#                   (i.e. no header, one record per line, comma delimited, last value is class label)
# ===================================================================================================

#!/bin/bash

# ===================================================================================================
# Function : validateSystem(simDirectory)
# Purpose  : Validates components required for cross validation run (based on simDirectory)
# Return   : None
# ===================================================================================================

validateSystem() {
	
	# check for correct number of parameters
	if [ -z ${1} ]; then
		echo "Usage: ./crossValidate.sh [simDirectory]"
		exit
	fi
	
	echo "Status: Validating system..."
	echo "=============================================="
	
	# check for data directory
	echo -n "Simulation directory \"${1}\"...  "
	if [ ! -d ../../datasets/${1} ]; then
		echo "NOT FOUND"
		exit
	fi
	echo "FOUND"
	
	# check for original data file in simulation directory
	echo -n "Data file \"${1}/original/${1}.data\"...  "
	if [ ! -f ../../datasets/${1}/original/${1}.data ]; then
		echo "NOT FOUND"
		exit
	fi
	echo "FOUND"
	
	# check for cross validation set building script
	echo -n "Cross validation set building script...  "
	if [ ! -f ../../algorithms/BuildSets/BuildSets.class ]; then
		echo "NOT FOUND"
		exit
	fi
	echo "FOUND"
	
	# check for SOM_PAK data conversion script
	echo -n "Conversion script \"${1}/convert_som.awk\"...  "
	if [ ! -f ./../../datasets/${1}/convert_som.awk ]; then
		echo "NOT FOUND"
		exit
	fi
	echo "FOUND"
	
	# check for SOM_PAK names script
	echo -n "Names script \"${1}/names_som.sh\"...  "
	if [ ! -f ./../../datasets/${1}/names_som.sh ]; then
		echo "NOT FOUND"
		exit
	fi
	echo "FOUND"
	
	# check for SOM_PAK initialisation program
	echo -n "SOM initialisation program...  "
	if [ ! -f ../../algorithms/SOM_PAK/lininit ]; then
		echo "NOT FOUND"
		exit
	fi
	echo "FOUND"
	
	# check for SOM_PAK training program
	echo -n "SOM training program...  "
	if [ ! -f ../../algorithms/SOM_PAK/vsom ]; then
		echo "NOT FOUND"
		exit
	fi
	echo "FOUND"
	
	# check for example-centric neuron labeling program
	echo -n "Example-centric neuron labeling program...  "
	if [ ! -f./../../algorithms/ExampleCentricNeuron_pruning/classify ]; then
		echo "NOT FOUND"
		exit
	fi
	echo "FOUND"
	
	#check for results averaging program
	echo -n "Results averaging program...  "
	if [ ! -f ../../algorithms/AverageRunResults/AverageLabelClassificationPruningResults.class ]; then
		echo "NOT FOUND"
		exit
	fi
	echo "FOUND"
	
	echo "=============================================="
	echo "Status: System OK..."
	
}

# ===================================================================================================
# Function : buildSets(simDirectory)
# Purpose  : Builds data sets required for cross validation simulations (based on simDirectory)
# Return   : None
# ===================================================================================================

buildSets() {
	
	echo "Status: Performing cross validation set builds"
	
	# build raw training and test sets (must still be converted to SOM_PAK format)
	if [ ${1} == "ionosphere" ]; then
		echo "Status: Building set for IONOSPHERE database"
		echo "=============================================="
		java BuildSets ../../datasets/${1}/original/${1}.data , 30 -normalise
	elif [ ${1} == "iris" ]; then
		echo "Status: Building set for IRIS database"
		echo "=============================================="
		java BuildSets ../../datasets/${1}/original/${1}.data , 30 -normalise
	elif [ ${1} == "monks1" ]; then
		echo "Status: Building set for MONKS1 database"
		echo "=============================================="
		java BuildSets ../../datasets/${1}/original/${1}.data , 30
	elif [ ${1} == "monks2" ]; then
		echo "Status: Building set for MONKS2 database"
		echo "=============================================="
		java BuildSets ../../datasets/${1}/original/${1}.data , 30
	elif [ ${1} == "monks3" ]; then
		echo "Status: Building set for MONKS3 database"
		echo "=============================================="
		java BuildSets ../../datasets/${1}/original/${1}.data , 30 5
	elif [ ${1} == "pima" ]; then
		echo "Status: Building set for PIMA database"
		echo "=============================================="
		java BuildSets ../../datasets/${1}/original/${1}.data , 30 -normalise
	else
		echo "Status: Unrecognised set"
		echo "Status: Building default"
		echo "=============================================="
		java BuildSets ../../datasets/${1}/original/${1}.data , 30
	fi
	
	echo "=============================================="
	echo "Status: Cross validation sets built"
	
	echo -n "Status: Performing data set conversions...  "
	
	# create SOM names file
	./../../datasets/${1}/names_som.sh > ${1}.names
	
	# perform conversion of data set from raw form to SOM_PAK format, creating [simulation].data
	for ((dataset = 0; dataset < 30; ++dataset))
	do
		gawk -f ./../../datasets/${1}/convert_som.awk ${1}.data.raw.${dataset}.train > ${1}.data.${dataset}.som.train
		rm -f ${1}.data.raw.${dataset}.train
		gawk -f ./../../datasets/${1}/convert_som.awk ${1}.data.raw.${dataset}.test > ${1}.data.${dataset}.som.test
		rm -f ${1}.data.raw.${dataset}.test
	done
	
	echo "DONE"
	
}

# ===================================================================================================
# Function : runCrossValidation(simDirectory, neuronLabelingMethod, mapDim, learningRate,
#            learningRateDecay, kernelWidth, radiusDecay, stdDevFraction)
# Purpose  : Performs a single cross validation using provided parameters
# Return   : None
# ===================================================================================================

runCrossValidation () {
	
	# get description string for neuron labeling method (0 = neuron)
	if [ ${2} -eq 0 ]; then
		neuronLabelingMethodDescription="neuron"
	fi
	
	if [ -f label-classification_${1}_${neuronLabelingMethodDescription}_dim_${3}_lr_${4}_lrd_${5}_kw_${6}_kwd_${7}_stdv_${8}.accuracy ]; then
		rm -f label-classification_${1}_${neuronLabelingMethodDescription}_dim_${3}_lr_${4}_lrd_${5}_kw_${6}_kwd_${7}_stdv_${8}.accuracy
	fi
	
	if [ -f label-classification_${1}_${neuronLabelingMethodDescription}_dim_${3}_lr_${4}_lrd_${5}_kw_${6}_kwd_${7}_stdv_${8}.error ]; then
		rm -f label-classification_${1}_${neuronLabelingMethodDescription}_dim_${3}_lr_${4}_lrd_${5}_kw_${6}_kwd_${7}_stdv_${8}.error
	fi
	
	for ((simNum = 0; simNum < 30; ++simNum))
	do
		echo -n "${simNum} "
		
		# execute SOM_PAK
		sleep 1
		./../../algorithms/SOM_PAK/vsom -din ${1}.data.${simNum}.som.train -vin ${1}.data.${simNum}.som.train -cin ${1}.${3}.${simNum}.map -cout ${1}.${3}.${simNum}.map.out -lrate ${4} -lratedecay ${5} -radius ${6} -radiusdecay ${7} -rand 0 >> /dev/null 2> /dev/null
		
		# execute appropriate neuron labeling algorithm on SOM_PAK output, and generate classification accuracy and error output
		sleep 1
		if [ ${2} -eq 0 ]; then
			./../../algorithms/ExampleCentricNeuron_pruning/classify ${1}.${3}.${simNum}.map.out ${1}.data.${simNum}.som.train ${1}.data.${simNum}.som.test ${1}.names label-classification_${1}_${neuronLabelingMethodDescription}_dim_${3}_lr_${4}_lrd_${5}_kw_${6}_kwd_${7}_stdv_${8}.accuracy label-classification_${1}_${neuronLabelingMethodDescription}_dim_${3}_lr_${4}_lrd_${5}_kw_${6}_kwd_${7}_stdv_${8}.error ${8} > /dev/null
		else
			echo
			echo "Invalid classification algorithm specified"
			exit
		fi
		
		# clean up
		rm -f *.map.out
	done
	
	# calculate confidence intervals
	java AverageLabelClassificationPruningResults -accuracy label-classification_${1}_${neuronLabelingMethodDescription}_dim_${3}_lr_${4}_lrd_${5}_kw_${6}_kwd_${7}_stdv_${8}.accuracy label-classification_${1}_${neuronLabelingMethodDescription}.accuracy.summary
	java AverageLabelClassificationPruningResults -error label-classification_${1}_${neuronLabelingMethodDescription}_dim_${3}_lr_${4}_lrd_${5}_kw_${6}_kwd_${7}_stdv_${8}.error label-classification_${1}_${neuronLabelingMethodDescription}.error.summary
	
	echo ""
	
}

# ===================================================================================================
# Function : runSims(simDirectory)
# Purpose  : Runs simulations for specified simDirectory [assumes built data sets]
# Return   : None
# ===================================================================================================

runSims () {
	
	echo "Status: Running simulations"
	echo "=============================================="
	
	# number of current simulation
	currentSimulation=106
	
	# neuron labeling method (0 = neuron)
	neuronLabelingMethod=0
	
	# SOM map dimension: (integer) [2:inf] (No default)
	mapDimensions=(7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7)
	
	# SOM initial learning rate (floating point) [0.0:inf]
	learningRates=(3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000 3.84765625000000)
	
	# SOM learning rate decay constant (floating point) (0.0:inf]
	learningRateDecays=(1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008 1209.96093750019008)
	
	# SOM initial kernel width (floating point) (0.0:inf]
	kernelWidths=(1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164 1.81835938018164)
	
	# SOM radius decay constant (floating point) (0.0:inf]
	kernelWidthDecays
	
	# fraction of standard deviation for interpolating unit pruning
	stdDevFractions=(0 1.75 2.625 0.875 1.3125 3.0625 2.1875 0.4375 0.65625 2.40625 3.28125 1.53125 1.09375 2.84375 1.96875 0.21875 0.328125 2.078125 2.953125 1.203125 1.640625 3.390625 2.515625 0.765625 0.546875 2.296875 3.171875 1.421875 0.984375 2.734375 1.859375 0.109375 0.1640625 1.9140625 2.7890625 1.0390625 1.4765625 3.2265625 2.3515625 0.6015625 0.8203125 2.5703125 3.4453125 1.6953125 1.2578125 3.0078125 2.1328125 0.3828125 0.2734375 2.0234375 2.8984375 1.1484375 1.5859375 3.3359375 2.4609375 0.7109375 0.4921875 2.2421875 3.1171875 1.3671875 0.9296875 2.6796875 1.8046875 0.0546875 0.08203125 1.83203125 2.70703125 0.95703125 1.39453125 3.14453125 2.26953125 0.51953125 0.73828125 2.48828125 3.36328125 1.61328125 1.17578125 2.92578125 2.05078125 0.30078125 0.41015625 2.16015625 3.03515625 1.28515625 1.72265625 3.47265625 2.59765625 0.84765625 0.62890625 2.37890625 3.25390625 1.50390625 1.06640625 2.81640625 1.94140625 0.19140625 0.13671875 1.88671875 2.76171875 1.01171875 1.44921875 3.19921875 2.32421875 0.57421875 0.79296875 2.54296875 3.41796875 1.66796875 1.23046875 2.98046875 2.10546875 0.35546875 0.24609375 1.99609375 2.87109375 1.12109375 1.55859375 3.30859375 2.43359375 0.68359375 0.46484375 2.21484375 3.08984375 1.33984375 0.90234375 2.65234375 1.77734375 0.02734375 0.041015625 1.791015625 2.666015625 0.916015625 1.353515625 3.103515625 2.228515625 0.478515625 0.697265625 2.447265625 3.322265625 1.572265625 1.134765625 2.884765625 2.009765625 0.259765625 0.369140625 2.119140625 2.994140625 1.244140625 1.681640625 3.431640625 2.556640625 0.806640625 0.587890625 2.337890625 3.212890625 1.462890625 1.025390625 2.775390625 1.900390625 0.150390625 0.205078125 1.955078125 2.830078125 1.080078125 1.517578125 3.267578125 2.392578125 0.642578125 0.861328125 2.611328125 3.486328125 1.736328125 1.298828125 3.048828125 2.173828125 0.423828125 0.314453125 2.064453125 2.939453125 1.189453125 1.626953125 3.376953125 2.501953125 0.751953125 0.533203125 2.283203125 3.158203125 1.408203125 0.970703125 2.720703125 1.845703125 0.095703125 0.068359375 1.818359375 2.693359375 0.943359375 1.380859375 3.130859375 2.255859375 0.505859375 0.724609375 2.474609375 3.349609375 1.599609375 1.162109375 2.912109375 2.037109375 0.287109375 0.396484375 2.146484375 3.021484375 1.271484375 1.708984375 3.458984375 2.583984375 0.833984375 0.615234375 2.365234375 3.240234375 1.490234375 1.052734375 2.802734375 1.927734375 0.177734375 0.123046875 1.873046875 2.748046875 0.998046875 1.435546875 3.185546875 2.310546875 0.560546875 0.779296875 2.529296875 3.404296875 1.654296875 1.216796875 2.966796875 2.091796875 0.341796875 0.232421875 1.982421875 2.857421875 1.107421875 1.544921875 3.294921875 2.419921875 0.669921875 0.451171875 2.201171875 3.076171875 1.326171875 0.888671875 2.638671875 1.763671875 0.013671875 0.0205078125 1.7705078125 2.6455078125 0.8955078125 1.3330078125 3.0830078125 2.2080078125 0.4580078125 0.6767578125 2.4267578125 3.3017578125 1.5517578125 1.1142578125 2.8642578125 1.9892578125 0.2392578125 0.3486328125 2.0986328125 2.9736328125 1.2236328125 1.6611328125 3.4111328125 2.5361328125 0.7861328125 0.5673828125 2.3173828125 3.1923828125 1.4423828125 1.0048828125 2.7548828125 1.8798828125 0.1298828125 0.1845703125 1.9345703125 2.8095703125 1.0595703125 1.4970703125 3.2470703125 2.3720703125 0.6220703125 0.8408203125 2.5908203125 3.4658203125 1.7158203125 1.2783203125 3.0283203125 2.1533203125 0.4033203125 0.2939453125 2.0439453125 2.9189453125 1.1689453125 1.6064453125 3.3564453125 2.4814453125 0.7314453125 0.5126953125 2.2626953125 3.1376953125 1.3876953125 0.9501953125 2.7001953125 1.8251953125 0.0751953125 0.1025390625 1.8525390625 2.7275390625 0.9775390625 1.4150390625 3.1650390625 2.2900390625 0.5400390625 0.7587890625 2.5087890625 3.3837890625 1.6337890625 1.1962890625 2.9462890625 2.0712890625 0.3212890625 0.4306640625 2.1806640625 3.0556640625 1.3056640625 1.7431640625 3.4931640625 2.6181640625 0.8681640625 0.6494140625 2.3994140625 3.2744140625 1.5244140625 1.0869140625 2.8369140625 1.9619140625 0.2119140625 0.1572265625 1.9072265625 2.7822265625 1.0322265625 1.4697265625 3.2197265625 2.3447265625 0.5947265625 0.8134765625 2.5634765625 3.4384765625 1.6884765625 1.2509765625 3.0009765625 2.1259765625 0.3759765625 0.2666015625 2.0166015625 2.8916015625 1.1416015625 1.5791015625 3.3291015625 2.4541015625 0.7041015625 0.4853515625 2.2353515625 3.1103515625 1.3603515625 0.9228515625 2.6728515625 1.7978515625 0.0478515625 0.0341796875 1.7841796875 2.6591796875 0.9091796875 1.3466796875 3.0966796875 2.2216796875 0.4716796875 0.6904296875 2.4404296875 3.3154296875 1.5654296875 1.1279296875 2.8779296875 2.0029296875 0.2529296875 0.3623046875 2.1123046875 2.9873046875 1.2373046875 1.6748046875 3.4248046875 2.5498046875 0.7998046875 0.5810546875 2.3310546875 3.2060546875 1.4560546875 1.0185546875 2.7685546875 1.8935546875 0.1435546875 0.1982421875 1.9482421875 2.8232421875 1.0732421875 1.5107421875 3.2607421875 2.3857421875 0.6357421875 0.8544921875 2.6044921875 3.4794921875 1.7294921875 1.2919921875 3.0419921875 2.1669921875 0.4169921875 0.3076171875 2.0576171875 2.9326171875 1.1826171875 1.6201171875 3.3701171875 2.4951171875 0.7451171875 0.5263671875 2.2763671875 3.1513671875 1.4013671875 0.9638671875 2.7138671875 1.8388671875 0.0888671875 0.0615234375 1.8115234375 2.6865234375 0.9365234375 1.3740234375 3.1240234375 2.2490234375 0.4990234375 0.7177734375 2.4677734375 3.3427734375 1.5927734375 1.1552734375 2.9052734375 2.0302734375 0.2802734375 0.3896484375 2.1396484375 3.0146484375 1.2646484375 1.7021484375 3.4521484375 2.5771484375 0.8271484375 0.6083984375 2.3583984375 3.2333984375 1.4833984375 1.0458984375 2.7958984375 1.9208984375 0.1708984375 0.1162109375 1.8662109375 2.7412109375 0.9912109375 1.4287109375 3.1787109375 2.3037109375 0.5537109375 0.7724609375 2.5224609375 3.3974609375 1.6474609375 1.2099609375 2.9599609375 2.0849609375 0.3349609375 0.2255859375 1.9755859375 2.8505859375 1.1005859375 1.5380859375 3.2880859375 2.4130859375 0.6630859375 0.4443359375 2.1943359375 3.0693359375 1.3193359375 0.8818359375 2.6318359375 1.7568359375 0.0068359375)
	
	# check that all arrays are the same length (otherwise we can't run through all parameter settings)
	if [ ${#mapDimensions[*]} -ne ${#learningRates[*]} ] || [ ${#mapDimensions[*]} -ne ${#learningRateDecays[*]} ] || [ ${#mapDimensions[*]} -ne ${#kernelWidths[*]} ] || [ ${#mapDimensions[*]} -ne ${#kernelWidthDecays[*]} ]; then
		echo "Error: parameter array sizes do not match"
		rm -f *.train *.test *.names
		exit
	fi
	
	# check for valid labeling method
	if [ ${neuronLabelingMethod} -ne 0 ] && [ ${neuronLabelingMethod} -ne 1 ] && [ ${neuronLabelingMethod} -ne 2 ] && [ ${neuronLabelingMethod} -ne 3 ]; then
		echo "Error: Invalid neuron labeling method"
		rm -f *.train *.test *.names
		exit
	fi
	
	# pre-generate initialized maps for each of the specified map dimensions (since this is a time-consuming task)
	echo "Generating maps..."
	
	for ((position = 0; position < ${#mapDimensions[*]}; ++position))
	do
		
		if [ ! -f ${1}.${mapDimensions[position]}.0.map ]; then
			echo -n "Map dimension ${mapDimensions[position]} x ${mapDimensions[position]}: "
			
			for ((simNum = 0; simNum < 30; ++simNum))
			do
				echo -n "$simNum "
				sleep 1
				./../../algorithms/SOM_PAK/lininit -din ${1}.data.${simNum}.som.train -cout ${1}.${mapDimensions[position]}.${simNum}.map -topol hexa -neigh gaussian -xdim ${mapDimensions[position]} -ydim ${mapDimensions[position]} > /dev/null
			done
			
			echo
		fi
		
	done
	
	echo "=============================================="
	
	for ((position = 105; position < ${#mapDimensions[*]}; ++position))
	do
		echo "Simulation ${currentSimulation}"
		echo "=============================================="
		
		echo "Map dimensions: ${mapDimensions[position]} x ${mapDimensions[position]}"
		echo "Initial learning rate: ${learningRates[position]}"
		echo "Learning rate decay constant: ${learningRateDecays[position]}"
		echo "Kernel width: ${kernelWidths[position]}"
		echo "Radius decay constant: ${kernelWidthDecays[position]}"
		echo "Standard deviation fraction for pruning: ${stdDevFractions[position]}"
		
		if [ ${neuronLabelingMethod} -eq 0 ]; then
			echo "Labeling method: example-centric neuron labeling"
		elif [ ${neuronLabelingMethod} -eq 1 ]; then
			echo "Labeling method: example-centric cluster labeling (K-Means)"
		elif [ ${neuronLabelingMethod} -eq 2 ]; then
			echo "Labeling method: example-centric cluster labeling (Ward)"
		elif [ ${neuronLabelingMethod} -eq 3 ]; then
			echo "Labeling method: weight-centric neuron labeling"
		fi
		
		# run 30 cross validated simulations
		runCrossValidation ${1} ${neuronLabelingMethod} ${mapDimensions[position]} ${learningRates[position]} ${learningRateDecays[position]} ${kernelWidths[position]} ${kernelWidthDecays[position]} ${stdDevFractions[position]}
		
		echo "=============================================="
		let currentSimulation++
	done
	
	rm -f *.map
	
	echo "Status: Simulations completed"
	
}

# ===================================================================================================
# Function : cleanUp()
# Purpose  : Cleans up files created during simulation run
# Return   : None
# ===================================================================================================

cleanUp() {
	
	echo -n "Status: Cleaning up...  "
	
	# clean up created files
	rm *.names *.train *.test
	
	echo "DONE"
	
}

# ===================================================================================================
# Main script
# ===================================================================================================

export CLASSPATH=/home/wvheerden/Dropbox/Documents/Simulations/algorithms/BuildSets:/home/wvheerden/Dropbox/Documents/Simulations/algorithms/AverageRunResults:.

validateSystem ${1}
buildSets ${1}
runSims ${1}
cleanUp ${1}
