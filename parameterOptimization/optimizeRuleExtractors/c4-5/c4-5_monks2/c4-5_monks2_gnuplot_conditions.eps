%!PS-Adobe-2.0 EPSF-2.0
%%Title: c4-5_monks2_gnuplot_conditions.tex
%%Creator: gnuplot 4.6 patchlevel 0
%%CreationDate: Mon Apr  1 00:56:10 2013
%%DocumentFonts: 
%%BoundingBox: 50 50 482 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext true def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -73 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 482 50 lineto 482 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (c4-5_monks2_gnuplot_conditions.tex)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 0)
  /Author (wvheerden)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Apr  1 00:56:10 2013)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
1.000 UL
LTb
1.000 UL
LTb
0 5039 N
0 0 L
8638 0 L
0 5039 V
0 5039 L
Z stroke
1.000 UP
1.000 UL
LTb
1.000 UL
LT0
0.76 0.76 0.76 C 0 4399 M
1440 640 V
2879 1407 L
4319 0 L
5759 4596 L
7198 4277 L
8638 0 L
0 568 M
1440 5039 L
2879 4429 L
4319 0 L
5759 177 L
7198 4277 L
8638 0 L
0 701 M
1440 5039 L
2879 1329 L
4319 3089 L
1440 11 V
7198 4277 L
8638 0 L
0 1571 M
1440 5039 L
2879 1575 L
4319 1031 L
5759 4724 L
7198 4277 L
8638 0 L
0 2405 M
1440 0 L
2879 1693 L
4319 4252 L
5759 1614 L
7198 4277 L
8638 0 L
0 2985 M
1440 5039 L
2879 2195 L
4319 0 L
5759 1604 L
7198 4277 L
8638 0 L
0 2018 M
1440 0 L
2879 522 L
4319 4413 L
5759 3080 L
7198 4277 L
8638 0 L
0 737 M
1440 5039 L
2879 2864 L
4319 0 L
5759 1171 L
7198 4277 L
8638 0 L
0 1631 M
1440 5039 L
2879 531 L
4319 1639 L
5759 453 L
7198 4277 L
8638 0 L
0 3045 M
1440 0 L
2879 3523 L
4319 0 L
5759 925 L
7198 4277 L
8638 0 L
0 2127 M
1440 5039 L
2879 394 L
4319 0 L
5759 1338 L
7198 4277 L
8638 0 L
0 4821 M
1440 218 V
2879 807 L
4319 3572 L
5759 335 L
7198 4277 L
8638 0 L
0 4060 M
1440 979 V
2879 364 L
4319 2409 L
5759 3868 L
1439 409 V
8638 0 L
0 3178 M
1440 5039 L
2879 1525 L
4319 4305 L
5759 2037 L
7198 4277 L
8638 0 L
0 3456 M
1440 0 L
2879 2352 L
1440 593 V
5759 1132 L
7198 4277 L
8638 0 L
0 3939 M
1440 0 L
2879 3307 L
4319 2462 L
5759 1102 L
7198 4277 L
8638 0 L
0 1039 M
1440 5039 L
2879 3868 L
1440 -99 V
5759 443 L
7198 4277 L
8638 0 L
0 4447 M
1440 592 V
2879 3425 L
4319 2820 L
1440 211 V
7198 4277 L
8638 0 L
0 4701 M
1440 0 L
2879 4389 L
4319 3786 L
5759 689 L
7198 4277 L
8638 0 L
0 2695 M
1440 0 L
2879 3405 L
1440 882 V
1440 221 V
7198 4277 L
8638 0 L
0 4954 M
1440 85 V
2879 2431 L
4319 0 L
5759 423 L
7198 4277 L
8638 0 L
0 3529 M
1440 5039 L
2879 1644 L
4319 0 L
5759 3415 L
1439 862 V
8638 0 L
0 2260 M
1440 0 L
2879 2421 L
4319 494 L
1440 589 V
7198 4277 L
8638 0 L
0 3142 M
1440 0 L
2879 2667 L
4319 2373 L
1440 963 V
1439 941 V
8638 0 L
0 1088 M
1440 5039 L
2879 2825 L
4319 4377 L
1440 377 V
7198 4277 L
8638 0 L
0 858 M
1440 0 L
2879 3376 L
4319 0 L
5759 1998 L
7198 4277 L
8638 0 L
0 4084 M
1440 0 L
2879 4242 L
4319 0 L
5759 1762 L
7198 4277 L
8638 0 L
0 2719 M
1440 0 L
2879 4527 L
4319 3679 L
5759 39 L
7198 4277 L
8638 0 L
0 2526 M
1440 0 L
2879 2520 L
4319 458 L
5759 2520 L
7198 4277 L
8638 0 L
0 1378 M
1440 0 L
2879 354 L
4319 0 L
5759 4527 L
7198 4277 L
8638 0 L
0 1668 M
1440 5039 L
2879 1978 L
4319 0 L
5759 2333 L
7198 4277 L
8638 0 L
0 2864 M
1440 5039 L
2879 3730 L
4319 1442 L
5759 4872 L
7198 4277 L
8638 0 L
0 4519 M
1440 520 V
2879 4124 L
4319 0 L
5759 4950 L
7198 4277 L
8638 0 L
0 3553 M
1440 0 L
2879 1348 L
4319 0 L
5759 2962 L
7198 4277 L
8638 0 L
0 4374 M
1440 0 L
2879 2569 L
4319 4126 L
5759 2293 L
7198 4277 L
8638 0 L
0 4689 M
1440 0 L
2879 2254 L
4319 1263 L
5759 4498 L
7198 4277 L
8638 0 L
0 4495 M
1440 0 L
2879 404 L
4319 3196 L
5759 2018 L
7198 4277 L
8638 0 L
0 725 M
1440 0 L
2879 4901 L
4319 2999 L
5759 1909 L
7198 4277 L
8638 0 L
0 2115 M
1440 5039 L
2879 2116 L
4319 4520 L
5759 738 L
7198 4277 L
8638 0 L
0 3782 M
1440 5039 L
2879 1260 L
4319 0 L
5759 3779 L
1439 498 V
8638 0 L
0 1269 M
1440 5039 L
2879 3317 L
4319 0 L
5759 522 L
7198 4277 L
8638 0 L
0 4568 M
1440 471 V
2879 3937 L
4319 1317 L
5759 472 L
7198 4277 L
8638 0 L
0 4217 M
1440 822 V
2879 2096 L
4319 0 L
5759 2766 L
7198 4277 L
8638 0 L
0 3903 M
1440 0 L
2879 4931 L
4319 0 L
5759 1191 L
7198 4277 L
8638 0 L
0 1547 M
1440 0 L
2879 2884 L
4319 0 L
5759 1348 L
7198 4277 L
8638 0 L
0 4604 M
1440 0 L
2879 1378 L
4319 0 L
5759 1929 L
7198 4277 L
8638 0 L
0 4109 M
1440 930 V
2879 413 L
4319 565 L
5759 4665 L
7198 4277 L
8638 0 L
0 2501 M
1440 0 L
2879 4075 L
4319 0 L
5759 374 L
7198 4277 L
8638 0 L
0 5027 M
1440 0 L
2879 778 L
4319 0 L
5759 3966 L
1439 311 V
8638 0 L
0 2223 M
1440 5039 L
2879 4822 L
4319 0 L
5759 1516 L
7198 4277 L
8638 0 L
0 1100 M
1440 0 L
2879 472 L
4319 744 L
5759 2047 L
7198 4277 L
8638 0 L
0 2236 M
1440 0 L
2879 3100 L
4319 4878 L
5759 463 L
7198 4277 L
8638 0 L
0 4979 M
1440 0 L
2879 3799 L
4319 0 L
5759 4586 L
7198 4277 L
8638 0 L
0 1088 M
1440 0 L
2879 4547 L
4319 0 L
5759 3366 L
1439 911 V
8638 0 L
0 4374 M
1440 665 V
2879 4606 L
4319 0 L
5759 905 L
7198 4277 L
8638 0 L
0 3311 M
1440 0 L
2879 157 L
4319 0 L
5759 1732 L
7198 4277 L
8638 0 L
0 2308 M
1440 0 L
2879 3327 L
4319 0 L
5759 2854 L
7198 4277 L
8638 0 L
0 4809 M
1440 230 V
2879 2608 L
4319 1478 L
5759 4222 L
1439 55 V
8638 0 L
0 870 M
1440 5039 L
2879 3710 L
4319 0 L
5759 1860 L
7198 4277 L
8638 0 L
0 1885 M
1440 5039 L
2879 3149 L
1440 745 V
5759 1890 L
7198 4277 L
8638 0 L
0 3541 M
1440 5039 L
2879 866 L
4319 601 L
5759 4015 L
1439 262 V
8638 0 L
0 1776 M
1440 5039 L
2879 1063 L
4319 3106 L
5759 2244 L
7198 4277 L
8638 0 L
0 4531 M
1440 0 L
2879 4763 L
4319 2391 L
5759 1378 L
7198 4277 L
8638 0 L
0 773 M
1440 5039 L
2879 2342 L
4319 0 L
5759 531 L
7198 4277 L
8638 0 L
0 1039 M
1440 5039 L
2879 2067 L
4319 1281 L
5759 4114 L
1439 163 V
8638 0 L
0 4217 M
1440 0 L
2879 39 L
4319 2963 L
5759 4212 L
1439 65 V
8638 0 L
0 2054 M
1440 5039 L
2879 640 L
4319 2766 L
5759 3828 L
1439 449 V
8638 0 L
0 3275 M
1440 0 L
2879 1781 L
1440 341 V
5759 1821 L
7198 4277 L
8638 0 L
0 4737 M
1440 0 L
2879 4261 L
1440 -63 V
5759 207 L
7198 4277 L
8638 0 L
0 1801 M
1440 5039 L
2879 3061 L
4319 512 L
5759 3573 L
1439 704 V
8638 0 L
0 665 M
1440 0 L
2879 4045 L
4319 0 L
5759 4557 L
7198 4277 L
8638 0 L
0 677 M
1440 0 L
2879 2647 L
4319 0 L
5759 10 L
7198 4277 L
8638 0 L
0 1837 M
1440 5039 L
2879 1447 L
4319 0 L
5759 384 L
7198 4277 L
8638 0 L
0 3359 M
1440 0 L
2879 4695 L
4319 0 L
5759 2372 L
7198 4277 L
8638 0 L
0 3323 M
1440 5039 L
2879 4035 L
4319 3142 L
1440 736 V
1439 399 V
8638 0 L
0 3420 M
1440 5039 L
2879 4911 L
4319 0 L
5759 1329 L
7198 4277 L
8638 0 L
0 2634 M
1440 0 L
2879 1614 L
4319 0 L
5759 748 L
7198 4277 L
8638 0 L
0 4133 M
1440 906 V
2879 1850 L
1440 398 V
5759 197 L
7198 4277 L
8638 0 L
0 4072 M
1440 967 V
2879 3760 L
4319 4932 L
5759 59 L
7198 4277 L
8638 0 L
0 4121 M
1440 0 L
2879 2470 L
4319 0 L
5759 3612 L
1439 665 V
8638 0 L
0 4930 M
1440 0 L
2879 3750 L
4319 2265 L
1440 422 V
7198 4277 L
8638 0 L
0 3879 M
1440 5039 L
2879 4271 L
4319 1854 L
1440 685 V
7198 4277 L
8638 0 L
0 2381 M
1440 0 L
2879 571 L
4319 3715 L
5759 3563 L
1439 714 V
8638 0 L
0 4169 M
1440 870 V
2879 2756 L
4319 0 L
5759 3386 L
1439 891 V
8638 0 L
0 1474 M
1440 5039 L
2879 1949 L
4319 0 L
5759 1870 L
7198 4277 L
8638 0 L
0 1933 M
1440 0 L
2879 905 L
4319 0 L
5759 512 L
7198 4277 L
8638 0 L
0 4556 M
1440 0 L
2879 1880 L
4319 4950 L
5759 2549 L
7198 4277 L
8638 0 L
0 4544 M
1440 495 V
2879 1083 L
4319 0 L
5759 4311 L
1439 -34 V
8638 0 L
0 1607 M
1440 5039 L
1439 -49 V
4319 3733 L
5759 1092 L
7198 4277 L
8638 0 L
0 2961 M
1440 0 L
2879 3356 L
1440 484 V
1440 185 V
1439 252 V
8638 0 L
stroke
3.000 UL
LT1
0.00 0.00 0.00 C 0 121 M
1440 5039 L
2879 4134 L
4319 3536 L
5759 3267 L
1439 943 V
8638 1524 L
stroke
1.000 UL
LTb
0 5039 N
0 0 L
8638 0 L
0 5039 V
0 5039 L
Z stroke
1.000 UP
1.000 UL
LTb
1440 0 M
0 5039 V
2879 0 M
0 5039 V
4319 0 M
0 5039 V
5759 0 M
0 5039 V
7198 0 M
0 5039 V
4269 458 M
100 0 V
stroke
grestore
end
showpage
%%Trailer
