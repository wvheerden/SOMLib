%!PS-Adobe-2.0 EPSF-2.0
%%Title: c4-5_ionosphere_gnuplot_conditions.tex
%%Creator: gnuplot 4.6 patchlevel 1
%%CreationDate: Wed Jul 10 22:30:09 2013
%%DocumentFonts: 
%%BoundingBox: 50 50 482 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext true def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -73 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 482 50 lineto 482 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (c4-5_ionosphere_gnuplot_conditions.tex)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 1)
  /Author (wvheerden)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Jul 10 22:30:09 2013)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
1.000 UL
LTb
1.000 UL
LTb
0 5039 N
0 0 L
8638 0 L
0 5039 V
0 5039 L
Z stroke
1.000 UP
1.000 UL
LTb
1.000 UL
LT0
0.76 0.76 0.76 C 0 505 M
1440 0 L
2879 4842 L
4319 0 L
5759 984 L
7198 150 L
8638 480 L
0 758 M
1440 5039 L
2879 4301 L
4319 0 L
5759 4340 L
7198 200 L
8638 480 L
0 505 M
1440 5039 L
2879 4202 L
4319 4019 L
5759 2825 L
7198 150 L
8638 480 L
0 936 M
1440 5039 L
2879 4872 L
4319 0 L
5759 3651 L
7198 649 L
8638 480 L
0 981 M
1440 5039 L
2879 1840 L
4319 0 L
5759 1722 L
7198 848 L
8638 480 L
0 431 M
1440 0 L
2879 1299 L
4319 673 L
5759 433 L
7198 150 L
8638 480 L
0 713 M
1440 5039 L
2879 1181 L
4319 0 L
5759 4960 L
7198 150 L
8638 480 L
0 446 M
1440 5039 L
2879 2657 L
4319 0 L
5759 2736 L
7198 150 L
8638 480 L
0 684 M
1440 0 L
2879 846 L
4319 0 L
5759 3917 L
7198 150 L
8638 480 L
0 818 M
1440 5039 L
2879 738 L
1440 418 V
5759 620 L
7198 299 L
8638 480 L
0 847 M
1440 5039 L
2879 3838 L
1440 378 V
5759 1240 L
7198 399 L
1440 81 V
0 476 M
1440 5039 L
2879 2362 L
4319 1890 L
5759 1417 L
7198 150 L
8638 480 L
0 342 M
1440 5039 L
2879 1673 L
4319 2856 L
5759 886 L
7198 150 L
8638 480 L
0 996 M
1440 5039 L
2879 443 L
4319 0 L
5759 3474 L
7198 1048 L
8638 480 L
0 907 M
1440 5039 L
2879 1772 L
4319 0 L
5759 2480 L
7198 549 L
8638 480 L
0 476 M
1440 0 L
2879 325 L
4319 0 L
5759 364 L
7198 150 L
8638 480 L
0 743 M
1440 0 L
2879 3504 L
4319 4681 L
5759 2638 L
7198 150 L
8638 480 L
0 357 M
1440 5039 L
2879 591 L
4319 4538 L
5759 3976 L
7198 150 L
8638 480 L
0 535 M
1440 5039 L
2879 1004 L
1440 349 V
5759 3445 L
7198 150 L
8638 480 L
0 654 M
1440 0 L
2879 4045 L
4319 0 L
5759 4557 L
7198 150 L
8638 480 L
0 713 M
1440 0 L
2879 1663 L
4319 905 L
5759 3277 L
7198 150 L
8638 480 L
0 862 M
1440 0 L
2879 4173 L
4319 2033 L
5759 79 L
7198 499 L
8638 480 L
0 981 M
1440 0 L
2879 2480 L
1440 913 V
5759 4606 L
7198 848 L
8638 480 L
0 595 M
1440 0 L
2879 3828 L
4319 1836 L
5759 3553 L
7198 150 L
8638 480 L
0 416 M
1440 5039 L
2879 1919 L
4319 0 L
5759 3376 L
7198 150 L
8638 480 L
0 728 M
1440 0 L
2879 4901 L
4319 2999 L
5759 1909 L
7198 150 L
8638 480 L
0 386 M
1440 5039 L
2879 4015 L
4319 0 L
5759 2126 L
7198 150 L
8638 480 L
0 446 M
1440 5039 L
2879 837 L
4319 0 L
5759 1506 L
7198 150 L
8638 480 L
0 951 M
1440 5039 L
2879 4724 L
4319 0 L
5759 2834 L
7198 698 L
8638 480 L
0 832 M
1440 5039 L
2879 2175 L
4319 1693 L
5759 4891 L
7198 299 L
8638 480 L
0 624 M
1440 0 L
2879 1890 L
4319 0 L
5759 630 L
7198 150 L
8638 480 L
0 922 M
1440 0 L
2879 994 L
4319 3554 L
5759 718 L
7198 649 L
8638 480 L
0 699 M
1440 5039 L
2879 1329 L
4319 3089 L
1440 11 V
7198 150 L
8638 480 L
0 580 M
1440 0 L
2879 2706 L
4319 1299 L
1440 345 V
7198 150 L
8638 480 L
0 803 M
1440 0 L
2879 1516 L
4319 0 L
5759 1358 L
7198 249 L
8638 480 L
0 342 M
1440 0 L
2879 1211 L
4319 0 L
5759 2352 L
7198 150 L
8638 480 L
0 922 M
1440 0 L
2879 3130 L
4319 1496 L
5759 4468 L
7198 649 L
8638 480 L
0 684 M
1440 0 L
2879 2647 L
4319 0 L
5759 10 L
7198 150 L
8638 480 L
0 312 M
1440 0 L
2879 2834 L
4319 0 L
5759 3464 L
7198 150 L
8638 480 L
0 624 M
1440 5039 L
2879 148 L
4319 0 L
5759 817 L
7198 150 L
8638 480 L
0 639 M
1440 5039 L
2879 167 L
4319 4771 L
5759 2411 L
7198 150 L
8638 480 L
0 832 M
1440 0 L
2879 118 L
4319 0 L
5759 3189 L
7198 299 L
8638 480 L
0 461 M
1440 0 L
2879 4714 L
4319 3232 L
1440 892 V
7198 150 L
8638 480 L
0 892 M
1440 5039 L
2879 335 L
4319 0 L
5759 3012 L
7198 549 L
8638 480 L
0 966 M
1440 0 L
2879 1043 L
4319 4001 L
5759 256 L
7198 748 L
8638 480 L
0 743 M
1440 5039 L
2879 2864 L
4319 0 L
5759 1171 L
7198 150 L
8638 480 L
0 386 M
1440 5039 L
2879 3533 L
4319 2516 L
5759 266 L
7198 150 L
8638 480 L
0 565 M
1440 5039 L
2879 4429 L
4319 0 L
5759 177 L
7198 150 L
8638 480 L
0 951 M
1440 0 L
2879 3002 L
4319 1908 L
5759 3986 L
7198 698 L
8638 480 L
0 520 M
1440 5039 L
2879 3120 L
1440 291 V
5759 2057 L
7198 150 L
8638 480 L
0 312 M
1440 0 L
2879 2982 L
4319 0 L
5759 3021 L
7198 150 L
8638 480 L
0 1011 M
1440 0 L
2879 4163 L
4319 1371 L
5759 896 L
1439 202 V
8638 480 L
0 669 M
1440 5039 L
2879 4685 L
4319 530 L
5759 1772 L
7198 150 L
8638 480 L
0 773 M
1440 5039 L
2879 2342 L
4319 0 L
5759 531 L
7198 200 L
8638 480 L
0 803 M
1440 0 L
2879 4419 L
4319 0 L
5759 2569 L
7198 249 L
8638 480 L
0 357 M
1440 0 L
2879 2333 L
4319 0 L
5759 2844 L
7198 150 L
8638 480 L
0 372 M
1440 0 L
2879 4311 L
4319 0 L
5759 1712 L
7198 150 L
8638 480 L
0 416 M
1440 0 L
2879 177 L
4319 2426 L
5759 4744 L
7198 150 L
8638 480 L
0 892 M
1440 0 L
2879 2392 L
4319 4162 L
5759 3848 L
7198 549 L
8638 480 L
0 788 M
1440 5039 L
2879 2677 L
1440 930 V
1440 645 V
7198 249 L
8638 480 L
0 595 M
1440 5039 L
2879 3346 L
4319 0 L
5759 4685 L
7198 150 L
8638 480 L
0 535 M
1440 0 L
2879 1801 L
4319 0 L
5759 4832 L
7198 150 L
8638 480 L
0 550 M
1440 0 L
2879 709 L
4319 3751 L
5759 2913 L
7198 150 L
8638 480 L
0 327 M
1440 5039 L
2879 4891 L
4319 762 L
5759 4616 L
7198 150 L
8638 480 L
0 773 M
1440 0 L
2879 620 L
4319 2659 L
5759 1289 L
7198 200 L
8638 480 L
0 877 M
1440 5039 L
2879 3710 L
4319 0 L
5759 1860 L
7198 549 L
8638 480 L
0 862 M
1440 0 L
2879 3376 L
4319 0 L
5759 1998 L
7198 499 L
8638 480 L
0 401 M
1440 0 L
2879 3238 L
4319 4914 L
5759 1073 L
7198 150 L
8638 480 L
0 654 M
1440 5039 L
2879 3248 L
4319 2283 L
5759 3720 L
7198 150 L
8638 480 L
0 565 M
1440 5039 L
2879 1506 L
4319 0 L
5759 4065 L
7198 150 L
8638 480 L
0 491 M
1440 0 L
2879 3720 L
4319 0 L
5759 4193 L
7198 150 L
8638 480 L
0 282 M
1440 5039 L
2879 1624 L
4319 4699 L
5759 89 L
7198 299 L
8638 552 L
0 297 M
1440 5039 L
1439 -20 V
4319 2641 L
5759 3838 L
7198 349 L
8638 576 L
0 282 M
1440 0 L
2879 1142 L
4319 0 L
5759 1850 L
7198 449 L
8638 624 L
0 268 M
1440 5039 L
2879 502 L
4319 3017 L
5759 4478 L
7198 449 L
8638 632 L
0 253 M
1440 0 L
2879 4340 L
4319 0 L
5759 2490 L
7198 499 L
8638 648 L
0 253 M
1440 0 L
2879 2224 L
4319 0 L
5759 3641 L
7198 499 L
8638 648 L
stroke
3.000 UL
LT1
0.00 0.00 0.00 C 0 609 M
1440 0 L
2879 2185 L
4319 4359 L
5759 2264 L
7198 150 L
8638 480 L
stroke
1.000 UL
LTb
0 5039 N
0 0 L
8638 0 L
0 5039 V
0 5039 L
Z stroke
1.000 UP
1.000 UL
LTb
1440 0 M
0 5039 V
2879 0 M
0 5039 V
4319 0 M
0 5039 V
5759 0 M
0 5039 V
7198 0 M
0 5039 V
4269 458 M
100 0 V
stroke
grestore
end
showpage
%%Trailer
